@page
@model BookReviewWeb.Pages.Library.IndexModel
@using System.Linq

@{
    ViewData["Title"] = "Almost Good Reads - Home";
}
<link rel="stylesheet" href="~/css/bookstyle.css" />
<div class="container">
    <partial name="BookListPage/_PageHeader" />

    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2>Book Library</h2>
        </div>
        <div class="filter-controls">
            <partial name="BookListPage/_GenreFilter" model="@Model" />
            <partial name="BookListPage/_SortingControls" model="@Model" />
        </div>
    </div>

    @if (!Model.Book.Any())
    {
        <partial name="BookListPage/_EmptyState" />
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3 row-cols-lg-5 g-4 mb-4">
            @foreach (var book in Model.Book)
            {
                <partial name="BookListPage/_BookCard" model="book" />
            }
        </div>

        @if (Model.TotalPages > 1)
        {
            // Build query string with all parameters except PageNumber
            string queryParams = $"SortOrder={Model.SortOrder}";
            if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                queryParams += $"&SearchTerm={Uri.EscapeDataString(Model.SearchTerm)}";
            }
            if (!string.IsNullOrEmpty(Model.SearchType))
            {
                queryParams += $"&SearchType={Model.SearchType}";
            }
            if (Model.GenreFilter.HasValue && Model.GenreFilter > 0)
            {
                queryParams += $"&GenreFilter={Model.GenreFilter}";
            }

            var paginationModel = new BookReviewWeb.Pages.Shared.PaginationModel
                    {
                        CurrentPage = Model.PageNumber,
                        TotalPages = Model.TotalPages,
                        QueryParams = queryParams
                    };

            <partial name="_Pagination" model="@paginationModel" />
        }
    }
</div>

<script src="~/js/bookScripts.js"></script>
